{"version":3,"sources":["api.ts","components/PersonLink.tsx","components/Loader/PeopleList/PeopleList.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","personName","to","slug","className","classNames","sex","name","findParent","parent","people","find","somePerson","motherName","fatherName","PeopleList","currentElement","length","map","born","died","Loader","PeoplePage","useState","setPeople","error","setError","isLoaderShow","setIsLoaderShow","useParams","useEffect","fetchedPeople","catch","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.08f180d8.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person | undefined,\n  personName?: string,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, personName }) => (\n  <>\n    {person ? (\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={classNames(\n            {\n              'has-text-danger': person.sex === 'f',\n            },\n          )}\n        >\n          {person.name}\n        </Link>\n      </td>\n    ) : (\n      <td>{personName}</td>\n    )}\n  </>\n);\n","import classNames from 'classnames';\nimport { Person } from '../../../types';\nimport { PersonLink } from '../../PersonLink';\n\ninterface Props {\n  people: Person[],\n  currentElement: string,\n}\n\nconst findParent = (\n  parent: 'mother' | 'father', person: Person, people: Person[],\n) => {\n  return parent === 'mother'\n    ? people.find(somePerson => somePerson.name === person.motherName)\n    : people.find(somePerson => somePerson.name === person.fatherName);\n};\n\nexport const PeopleList: React.FC<Props> = ({ people, currentElement }) => {\n  return (\n    <>\n      {!people.length ? (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      ) : (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => (\n              <tr\n                data-cy=\"person\"\n                key={person.name}\n                className={classNames(\n                  {\n                    'has-background-warning': person.slug === currentElement,\n                  },\n                )}\n              >\n                <PersonLink person={person} />\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                {person.motherName ? (\n                  <PersonLink\n                    person={\n                      findParent('mother', person, people)\n                    }\n                    personName={person.motherName}\n                  />\n                ) : (\n                  <td>-</td>\n                )}\n                {person.fatherName ? (\n                  <PersonLink\n                    person={\n                      findParent('father', person, people)\n                    }\n                    personName={person.fatherName}\n                  />\n                ) : (\n                  <td>-</td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleList } from '../components/Loader/PeopleList/PeopleList';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState('');\n  const [isLoaderShow, setIsLoaderShow] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoaderShow(true);\n\n    getPeople()\n      .then((fetchedPeople) => {\n        setPeople(fetchedPeople);\n        setError('');\n        setIsLoaderShow(false);\n      })\n      .catch(() => {\n        setError('Cannot load people');\n        setIsLoaderShow(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {error ? (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              {error}\n            </p>\n          ) : (\n            <>\n              {isLoaderShow ? (\n                <Loader />\n              ) : (\n                <PeopleList\n                  people={people}\n                  currentElement={slug}\n                />\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={\n                ({ isActive }) => classNames(\n                  'navbar-item',\n                  {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              }\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={\n                ({ isActive }) => classNames(\n                  'navbar-item',\n                  {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              }\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"people\"\n              element={(<PeoplePage />)}\n            >\n              <Route index element={(<PeoplePage />)} />\n              <Route path=\":slug\" element={(<PeoplePage />)} />\n            </Route>\n\n            <Route path=\"*\" element={<p>Page not found</p>} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}